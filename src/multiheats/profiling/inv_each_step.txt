Creating surface profile...
Computing temperature evolution...
Wrote profile results to main.py.lprof
Timer unit: 1e-06 s

Creating surface profile...
Computing temperature evolution...
Visualisation
Wrote profile results to main.py.lprof
Timer unit: 1e-06 s

Total time: 152.82 s
File: /home/cmergny/Work/PhD/multiheats/src/multiheats/solvers.py
Function: implicit_scheme at line 32

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    32                                               @profile
    33                                               def implicit_scheme(self, dt, solar_flux):
    34                                                   """
    35                                                   Solves the discretized heat equation implicitely
    36                                                   with Euler Backward Scheme.
    37                                                   Input: prev_temp at time it-1
    38                                                   Returns: new_temp at time it np.array with shape=(nx)
    39                                                   """
    40                                           
    41     27399     618582.5     22.6      0.4          rcoef = dt / self.rho / self.cp
    42                                           
    43     27398      20343.1      0.7      0.0          if self.need_update:
    44         1         60.6     60.6      0.0              self.matrix = self.update_matrix(self.nx, self.cond, self.dx, rcoef)
    45                                           
    46                                                   # Set BC
    47     27399     270446.7      9.9      0.2          source = self.temp + rcoef * self.qheat
    48                                           
    49     27399     925572.6     33.8      0.6          s0, sN, b0, c0, aN, bN = self.set_flux_BC(rcoef, solar_flux)
    50     27399      21831.9      0.8      0.0          source[0] = s0
    51     27399      12380.7      0.5      0.0          source[-1] = sN
    52     27399      30682.2      1.1      0.0          self.matrix[1, 0] = b0
    53     27399      17618.6      0.6      0.0          self.matrix[1, -1] = bN
    54     27399      17842.1      0.7      0.0          self.matrix[0, 1] = c0
    55     27399      18130.1      0.7      0.0          self.matrix[2, -2] = aN
    56                                           
    57     27399       9786.2      0.4      0.0          self.mat = (
    58     27399    4030997.3    147.1      2.6              np.diag(self.matrix[2, :-1], k=-1)
    59     27399    2830813.5    103.3      1.9              + np.diag(self.matrix[1])
    60     27399    2078058.5     75.8      1.4              + np.diag(self.matrix[0, 1:], k=1)
    61                                                   )
    62                                           
    63                                                   self.inv_mat = np.linalg.inv(self.mat)
    64                                                   new_temp = np.dot(self.inv_mat, source)
    65                                           
    66                                                   return new_temp

Creating surface profile...
Computing temperature evolution...
Visualisation
Wrote profile results to main.py.lprof
Timer unit: 1e-06 s


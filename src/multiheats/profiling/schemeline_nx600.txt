Creating surface profile...
Computing temperature evolution...
Wrote profile results to main.py.lprof
Timer unit: 1e-06 s

Total time: 5.35343 s
File: /home/cmergny/Work/PhD/multiheats/src/multiheats/solvers.py
Function: implicit_scheme at line 31

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    31                                               @profile
    32                                               def implicit_scheme(self, dt, solar_flux):
    33                                                   """
    34                                                   Solves the discretized heat equation implicitely
    35                                                   with Euler Backward Scheme.
    36                                                   Input: prev_temp at time it-1
    37                                                   Returns: new_temp at time it np.array with shape=(nx)
    38                                                   """
    39                                           
    40     48263     243050.3      5.0      4.5          rcoef = dt / self.rho / self.cp
    41     48263      11293.2      0.2      0.2          cond = self.cond
    42     48263       8567.0      0.2      0.2          dx = self.dx
    43                                           
    44     48263    2225248.4     46.1     41.6          matrice = coeffs_matrice(self.nx, self.cond, dx, rcoef)
    45                                           
    46                                                   # Set BC
    47     48263     143249.3      3.0      2.7          source = self.temp + rcoef * self.qheat
    48     48262     485514.8     10.1      9.1          s1, sN, b1, c1, aN, bN = self.set_flux_BC(rcoef, solar_flux)
    49     48262      16430.1      0.3      0.3          source[0] = s1
    50     48262      11768.6      0.2      0.2          source[-1] = sN
    51     48262      11500.6      0.2      0.2          matrice[1, 0] = b1
    52     48262      10859.0      0.2      0.2          matrice[1, -1] = bN
    53     48262      12377.4      0.3      0.2          matrice[0, 1] = c1
    54     48262      10409.2      0.2      0.2          matrice[2, -2] = aN
    55                                           
    56     48262    2154691.3     44.6     40.2          new_temp = scipy.linalg.solve_banded((1, 1), matrice, source)
    57                                           
    58     48262       8468.1      0.2      0.2          return new_temp

Creating surface profile...
Computing temperature evolution...
Visualisation
Wrote profile results to main.py.lprof
Timer unit: 1e-06 s

Total time: 9.31789 s
File: /home/cmergny/Work/PhD/multiheats/src/multiheats/solvers.py
Function: implicit_scheme at line 31

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    31                                               @profile
    32                                               def implicit_scheme(self, dt, solar_flux):
    33                                                   """
    34                                                   Solves the discretized heat equation implicitely
    35                                                   with Euler Backward Scheme.
    36                                                   Input: prev_temp at time it-1
    37                                                   Returns: new_temp at time it np.array with shape=(nx)
    38                                                   """
    39                                           
    40     82197     424446.7      5.2      4.6          rcoef = dt / self.rho / self.cp
    41     82197      17158.2      0.2      0.2          cond = self.cond
    42     82197      15354.8      0.2      0.2          dx = self.dx
    43                                           
    44     82197    3885711.2     47.3     41.7          matrice = coeffs_matrice(self.nx, self.cond, dx, rcoef)
    45                                           
    46                                                   # Set BC
    47     82197     244683.5      3.0      2.6          source = self.temp + rcoef * self.qheat
    48     82197     792378.8      9.6      8.5          s1, sN, b1, c1, aN, bN = self.set_flux_BC(rcoef, solar_flux)
    49     82197      27048.9      0.3      0.3          source[0] = s1
    50     82197      19781.4      0.2      0.2          source[-1] = sN
    51     82197      18026.7      0.2      0.2          matrice[1, 0] = b1
    52     82197      18293.2      0.2      0.2          matrice[1, -1] = bN
    53     82197      20029.4      0.2      0.2          matrice[0, 1] = c1
    54     82197      18066.7      0.2      0.2          matrice[2, -2] = aN
    55                                           
    56     82197    3800598.3     46.2     40.8          new_temp = scipy.linalg.solve_banded((1, 1), matrice, source)
    57                                           
    58     82197      16314.2      0.2      0.2          return new_temp

Creating surface profile...
Computing temperature evolution...
Visualisation
Wrote profile results to main.py.lprof
Timer unit: 1e-06 s

Total time: 9.22619 s
File: /home/cmergny/Work/PhD/multiheats/src/multiheats/solvers.py
Function: implicit_scheme at line 31

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    31                                               @profile
    32                                               def implicit_scheme(self, dt, solar_flux):
    33                                                   """
    34                                                   Solves the discretized heat equation implicitely
    35                                                   with Euler Backward Scheme.
    36                                                   Input: prev_temp at time it-1
    37                                                   Returns: new_temp at time it np.array with shape=(nx)
    38                                                   """
    39                                           
    40     82197     408114.3      5.0      4.4          rcoef = dt / self.rho / self.cp
    41     82197      18333.0      0.2      0.2          cond = self.cond
    42     82197      13276.4      0.2      0.1          dx = self.dx
    43                                           
    44     82197    3877577.4     47.2     42.0          matrice = coeffs_matrice(self.nx, self.cond, dx, rcoef)
    45                                           
    46                                                   # Set BC
    47     82197     241390.1      2.9      2.6          source = self.temp + rcoef * self.qheat
    48     82197     813757.1      9.9      8.8          s1, sN, b1, c1, aN, bN = self.set_flux_BC(rcoef, solar_flux)
    49     82197      27035.9      0.3      0.3          source[0] = s1
    50     82197      20924.8      0.3      0.2          source[-1] = sN
    51     82197      21588.1      0.3      0.2          matrice[1, 0] = b1
    52     82197      19903.1      0.2      0.2          matrice[1, -1] = bN
    53     82197      22041.7      0.3      0.2          matrice[0, 1] = c1
    54     82197      19398.9      0.2      0.2          matrice[2, -2] = aN
    55                                           
    56     82197    3707222.8     45.1     40.2          new_temp = scipy.linalg.solve_banded((1, 1), matrice, source)
    57                                           
    58     82197      15631.1      0.2      0.2          return new_temp

